<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

	<PropertyGroup>
		<TargetFrameworks>net452;net35;netcoreapp3.1</TargetFrameworks>
    <UseWPF>True</UseWPF>
    <AutoGenerateBindingRedirects Condition="$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('net3'))">true</AutoGenerateBindingRedirects>
    <AssemblyName>WPFLocalizeExtension</AssemblyName>
		<Version>$(GitVersion_NuGetVersion)</Version>
		<AssemblyTitle>WPFLocalizeExtension</AssemblyTitle>
    <PackageId>WPFLocalizeExtensionEzzFork</PackageId>
		<Authors>Bernhard Millauer,Uwe Mayer, Konrad Mattheis</Authors>
    <PackageLicenseExpression>MS-PL</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/ezhassen/WPFLocalizationExtension/</PackageProjectUrl>
		<Copyright>Bernhard Millauer, Uwe Mayer, Konrad Mattheis</Copyright>
		<Description>LocalizationExtension is a really easy way to localize any type of DependencyProperties or native Properties on DependencyObjects (This is a fork to support .net core 3.1)</Description>
    <Company>ezhassen</Company>
		<Product>WPF Localization Extension</Product>
		<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
		<PackageReleaseNotes></PackageReleaseNotes>
		<NeutralLanguage>en-US</NeutralLanguage>
		<PackageTags>wpf localization extension globalization resx csv resource language</PackageTags>
		<RepositoryUrl>https://github.com/ezhassen/WPFLocalizationExtension</RepositoryUrl>
    <PackageReleaseNotes></PackageReleaseNotes>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<SignAssembly>true</SignAssembly>
		<DelaySign>false</DelaySign>
		<PublicSign>true</PublicSign>
		<AssemblyOriginatorKeyFile>public.snk</AssemblyOriginatorKeyFile>
    <!--Workaround for Error	MSB4216	Could not run the "GenerateResource" -->
    <GenerateResourceMSBuildArchitecture>CurrentArchitecture</GenerateResourceMSBuildArchitecture>
	</PropertyGroup>

	<Choose>
		<When Condition="'$(Configuration)' == 'Release'">
			<PropertyGroup>
				<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
				<GenerateDocumentationFile>true</GenerateDocumentationFile>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
				<GenerateDocumentationFile>false</GenerateDocumentationFile>
			</PropertyGroup>
		</Otherwise>
	</Choose>
  
  <!--References for .Net Framwork 4 and 35-->
  <ItemGroup Condition="$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('net3'))">
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.Management" />
    <Reference Include="WindowsBase" />
    <Reference Condition="'$(TargetFramework)' != 'net35'" Include="System.Xaml" />
  </ItemGroup>

  <!--References for .Net Core 3.1-->
  <ItemGroup Condition="$(TargetFramework.StartsWith('netcore'))">
    <PackageReference Include="Microsoft.Windows.Compatibility" Version="3.1.0" />
  </ItemGroup>

  <!--PackageReference for all framworks-->
	<ItemGroup>
    <PackageReference Include="XAMLMarkupExtensionsEzzFork" Version="1.7.0-ezzfork0001" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta2-19367-01" PrivateAssets="All" />
		<PackageReference Include="GitVersionTask" Version="5.1.1" PrivateAssets="All" />
	</ItemGroup>

	<Target Name="PublishToNugetWithAPIKey" AfterTargets="GenerateNuspec" Condition="Exists('$(SolutionDir)\..\..\nugetapikey.txt')">
		<ReadLinesFromFile File="$(SolutionDir)\..\..\nugetapikey.txt">
			<Output TaskParameter="Lines" PropertyName="NugetAPIKey" />
		</ReadLinesFromFile>
		<Exec WorkingDirectory="$(BaseDir)" Command="dotnet nuget push $(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg -k $(NugetAPIKey) -s https://api.nuget.org/v3/index.json" />
	</Target>

	<Target Name="FixOnGitVersionTaskError" BeforeTargets="GetAssemblyVersion">
		<CreateProperty Value="0.0.1-notgitversion" Condition="'$(GitVersion_NuGetVersion)' == ''">
			<Output TaskParameter="Value" PropertyName="Version" />
		</CreateProperty>
	</Target>
</Project>
